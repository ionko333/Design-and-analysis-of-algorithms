#include <iostream>
using namespace std;

void merge(int arr[], int left, int mid, int right)
{
	int i = 0;
	int j = 0;
	int k = left;
	int size1 = mid - left + 1;
	int size2 = right - mid;
	int* temp1 = new int[size1];
	int* temp2 = new int[size2];
	for (int i = 0; i < size1; i++)
	{
		temp1[i] = arr[left + i];
	}
	for (int i = 0; i < size2; i++)
	{
		temp2[i] = arr[mid + i + 1];
	}
	while (i < size1 && j < size2)
	{
		if (temp1[i] <= temp2[j])
		{
			arr[k++] = temp1[i++];
		}
		else
		{
			arr[k++] = temp2[j++];
		}
	}
	while (i < size1)
	{
		arr[k++] = temp1[i++];
	}
	while (j < size2)
	{
		arr[k++] = temp2[j++];
	}
	delete[] temp1;
	delete[] temp2;
}

void mergeSort(int arr[], int left, int right)
{
	if (left < right)
	{
		int mid = (left + right) / 2;
		mergeSort(arr, left, mid);
		mergeSort(arr, mid + 1, right);
		merge(arr, left, mid, right);
	}
}
