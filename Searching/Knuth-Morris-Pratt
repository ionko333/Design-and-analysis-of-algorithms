#include <iostream>
#include <string>
#include <vector>

using namespace std;

void KMP(const string& text, const string& pattern)
{
    int n = text.length();
    int m = pattern.length();
    vector<int> table;///table[i] tells us where to start matching in p after a mismatch at i + 1
    table.resize(m);
    int left = 0;
    int right = left + 1;
    table[0] = 0;
    while(right < m)
    {
        if(pattern[left] == pattern[right])
        {
            table[right] = left + 1;
            left++;
        }
        else
        {
            table[right] = 0;
        }
        right++;
    }

    for(int i = 0; i < m; i++)
    {
        cout << table[i] << " ";
    }
    cout << endl;

    int i = 0;
    int j = 0;
    int cnt = 0;
    while(i < n)
    {
        if(text[i] == pattern[j])
        {
            j++;
            i++;
        }
        if(j == m)
        {
            cout << "Pattern found at index " << i - j << endl;
            return;
        }
        else if(i < n && pattern[j] != text[i])
        {
            if(j > 0)
            {
                j = table[j - 1];
            }
            else
            {
                i++;
            }
        }
    }

}




int main()
{
    return 0;
}
