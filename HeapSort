#include <iostream>

using namespace std;

void heapify(int* arr, int n, int i)
{
    int j = i;
    int largest = j;
    while (j <= n/2 - 1)
    {
        if (2*j + 1 <= n - 1 && arr[2*j + 1] > arr[j])
        {
            largest = 2*j + 1;
        }
        if (2*j + 2 <= n - 1 && arr[2*j + 2] > arr[largest])
        {
            largest = 2*j + 2;
        }
        if (largest != j)
        {
            swap(arr[j],arr[largest]);
            j = largest;
        }
        else
        {
            break;
        }
    }
}

void buildHeap(int* arr, int n)
{
    for (int i = n/2 - 1; i >= 0; --i)
    {
        heapify(arr,n,i);
    }
}

void heapSort(int* arr, int n)
{
    buildHeap(arr,n);
    int size = n;
    for (int i = n - 1; i >= 1; --i)
    {
        swap(arr[i], arr[0]);
        size--;
        heapify(arr,size,0);
    }
}
